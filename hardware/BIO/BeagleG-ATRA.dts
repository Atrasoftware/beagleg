
/dts-v1/;
/plugin/;

/{
  compatible = "ti,beaglebone", "ti,beaglebone-black", "ti,beaglebone-green";
  part-number = "BeagleG-ATRA";  /* BeagleG/Bumps 'cape' */
  version = "00A0";

  exclusive-use = /* the pin header uses */
                  /* UARTS */
                  "P9.11",        /* uart4_rxd */
                  "P9.13",        /* uart4_txd */
                  "P9.21",        /* uart2_txd */
                  "P9.22",        /* uart2_rxd */

                  /* GPIOs */
                  "P9.25",        /* MOTORS ENABLE GPO0 */

                  /* X */
                  "P8.11",        /* STEP GPO1 OUT*/
                  "P8.12",        /* DIR GPO2 OUT*/
                  "P9.27",        /* LSW GPI0 IN*/

                  /* Y */
                  "P8.43",        /* STEP GPO3 OUT*/
                  "P8.44",        /* DIR GPO4 OUT*/
                  "P9.41",        /* LSW GPI1 IN*/

                  /* Z */
                  "P8.39",        /* STEP GPO5 OUT*/
                  "P8.40",        /* DIR GPO6 OUT*/
                  "P8.16",        /* LSW GPI2 IN*/

                  /* A component */
                  "P8.28",        /* STEP GPO7 OUT*/
                  "P8.30",        /* DIR GPO8 OUT*/

                  /* B component */
                  "P8.7",        /* STEP GPO9 OUT*/
                  "P8.8",        /* DIR GPO10 OUT*/

                  /* the peripherals used */
                  "uart4",       // TMCL uart
                  "uart2",
                  "pruss",       // Programmable realtime unit

                  /* Analogs in */
                  "P9.39",      // AIN0
                  "P9.40",      // AIN1
                  "P9.37",      // AIN2
                  "P9.38",      // AIN3
                  "P9.33",      // AIN4
                  "P9.36",      // AIN5
                  "P9.35",      // AIN6
                  "tscadc",     // hardware ip used

                  /* Buttons input */
                  "P8.15",      // Start

                  /* termreg PWM outpus */
                  "P8.31",     // PWM0
                  "P8.32";     // PWM1

  fragment@0 {
    target = <&am33xx_pinmux>;
    __overlay__ {
      beagleg_gpio_pins: BeagleG_Pins {
        pinctrl-single,pins = <
          /* Motor enable */
          0x1ac 0x17 /* P9_25, pullup */

          /* Motor step pins */
          0x034 0x07  /* STEPX P8.11 */
          0x0a8 0x07  /* STEPY P8.43 */
          0x0b8 0x07  /* STEPZ P8.39 */

          /* Motor dir pins */
          0x030 0x07  /* DIRX P8.12 */
          0x0ac 0x07  /* DIRY P8.44 */
          0x0bc 0x07  /* DIRZ P8.40 */

          /* Component A */
          0x0e8 0x07  /* STEPA P8.28 */
          0x0ec 0x07  /* DIRA  P8.30 */

          /* Component B */
          0x090 0x07  /* STEPB P8.7 */
          0x094 0x07  /* DIRB  P8.8 */

          /* termreg PWM outpus */
          0x0d8 0x07  /* PWM0  P8.31 */
          0x0dc 0x07  /* PWM1  P8.32 */

          /* Inputs */
          0x03c 0x37  /* Start input button */
        >;
      };

      /* UARTS */
      bb_uart2_pins: pinmux_bb_uart2_pins {
        pinctrl-single,pins = <
          0x154 0x21 /* UART2 TX */
          0x150 0x21 /* UART2 RX */
        >;
      };

      bb_uart4_pins: pinmux_bb_uart4_pins {
        pinctrl-single,pins = <
          0x070 0x26 /* UART4 RX */
          0x074 0x26 /* UART4 TX */
        >;
      };
    };
  };

  fragment@1 {
    target = <&ocp>;
    __overlay__ {
      test_helper: helper {
        compatible = "bone-pinmux-helper";
        pinctrl-names = "default";
        pinctrl-0 = <&beagleg_gpio_pins>;
        status = "okay";
      };
    };
  };

  fragment@2 {
    target = <&pruss>;
    __overlay__ {
      status = "okay";
    };
  };

  fragment@3 {
    target = <&uart2>;
    __overlay__ {
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&bb_uart2_pins>;
    };
  };

  fragment@4 {
    target = <&uart4>;
    __overlay__ {
      status = "okay";
      pinctrl-names = "default";
      pinctrl-0 = <&bb_uart4_pins>;
    };
  };

  fragment@5 {
    target = <&tscadc>;
    __overlay__ {
      status = "okay";
      adc {
        ti,adc-channels = <0 1 2 3 4 5 6>;
        ti,chan-step-avg = <0x16 0x16 0x16 0x16 0x16 0x16 0x16>;
        ti,chan-step-opendelay = <0x98 0x98 0x98 0x98 0x98 0x98 0x98>;
        ti,chan-step-sampledelay = <0x0 0x0 0x0 0x0 0x0 0x0 0x0>;
      };
    };
  };

};
